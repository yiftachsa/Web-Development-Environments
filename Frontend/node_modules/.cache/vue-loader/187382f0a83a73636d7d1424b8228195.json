{"remainingRequest":"C:\\scripts\\Courses_Scripts\\Internet_Programing_Environments\\Project\\assignment-3-2-v2-yiftach-merav\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\scripts\\Courses_Scripts\\Internet_Programing_Environments\\Project\\assignment-3-2-v2-yiftach-merav\\src\\components\\RecipeCooking.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"C:\\scripts\\Courses_Scripts\\Internet_Programing_Environments\\Project\\assignment-3-2-v2-yiftach-merav\\src\\components\\RecipeCooking.vue","mtime":1594550723580},{"path":"C:\\scripts\\Courses_Scripts\\Internet_Programing_Environments\\Project\\assignment-3-2-v2-yiftach-merav\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\scripts\\Courses_Scripts\\Internet_Programing_Environments\\Project\\assignment-3-2-v2-yiftach-merav\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"C:\\scripts\\Courses_Scripts\\Internet_Programing_Environments\\Project\\assignment-3-2-v2-yiftach-merav\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"C:\\scripts\\Courses_Scripts\\Internet_Programing_Environments\\Project\\assignment-3-2-v2-yiftach-merav\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\scripts\\Courses_Scripts\\Internet_Programing_Environments\\Project\\assignment-3-2-v2-yiftach-merav\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCg0KLmltYWdlQW5kdGl0bGUgew0KICBmb250LWZhbWlseTogRG9zaXMsIEhlbHZldGljYSwgQXJpYWwsIHNhbnMtc2VyaWY7DQogIGZvbnQtc2l6ZTogMi4yNXJlbTsNCiAgZm9udC13ZWlnaHQ6IDgwMDsNCn0NCg0KIC50ZXh0ew0KICAgIGZvbnQtZmFtaWx5OiBEb3NpcywgSGVsdmV0aWNhLCBBcmlhbCwgc2Fucy1zZXJpZjsNCiAgICBmb250LXNpemU6IDEuNXJlbTsNCiAgICBmb250LXdlaWdodDogMzAwOw0KICB9DQoNCiAgLnRleHRCb2xkew0KICAgIGZvbnQtd2VpZ2h0OiA0NTA7DQogICAgZm9udC1zaXplOiAxLjY1cmVtOw0KICB9DQoNCg=="},{"version":3,"sources":["RecipeCooking.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2JA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA","file":"RecipeCooking.vue","sourceRoot":"src/components","sourcesContent":["<template>\r\n  <div class=\"text\">\r\n    <!-- <RecipePreview v-if=\"recipePreview != null\" :recipe=\"recipePreview\" class=\"recipePreview\" /> -->\r\n    <b-container v-if=\"recipe\">\r\n      <h3 class=\"title\">Cooking instructions:</h3>\r\n      <ImageAndTitlePageDisplay\r\n        class=\"imageAndtitle\"\r\n        :photo=\"recipe.photo\"\r\n        :title=\"recipe.title\"\r\n      />\r\n    </b-container>\r\n    <b-container v-if=\"recipe\">\r\n      <Ingredients class=\"textBold\" :scale='true' :yeild=\"recipe.yeild\" :ingredients=\"recipe.ingredients\" />\r\n    </b-container>\r\n\r\n    <RecipePrep class=\"text\"\r\n      v-if=\"detailedInstructions != null\"\r\n      :detailedInstructions=\"detailedInstructions\"\r\n      :previousProgress=\"getProgress()\"\r\n      @progress-changed=\"updateProgress\"\r\n    />\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport RecipePrep from \"./RecipePrep\";\r\nimport ImageAndTitlePageDisplay from \"./ImageAndTitlePageDisplay\";\r\nimport Ingredients from \"./Ingredients\";\r\nexport default {\r\n  components: {\r\n    RecipePrep,\r\n    ImageAndTitlePageDisplay,\r\n    Ingredients,\r\n  },\r\n  props: {\r\n    recipeId: {\r\n      required: true,\r\n    },\r\n    recipeProp: {\r\n      type: Object,\r\n      required: false,\r\n    },\r\n    recipeType: {\r\n      type: String,\r\n      required: true,\r\n    },\r\n  },\r\n  data() {\r\n    return {\r\n      detailedInstructions: null,\r\n      recipe: null,\r\n    };\r\n  },\r\n  mounted() {\r\n    this.getRecipeDetails();\r\n  },\r\n  methods: {\r\n    async getRecipeDetails() {\r\n      try {\r\n        let promises = [];\r\n        if ((this.recipeType == \"personal\") | (this.recipeType == \"family\")) {\r\n          if (!$cookies.get(\"session\")) {\r\n            this.$router.push(\"/\").catch(() => {\r\n              this.$forceUpdate();\r\n            });\r\n            return;\r\n          }\r\n          //checking the type of recipe\r\n          if (this.recipeType == \"personal\") {\r\n            promises = this.UserRecipeDetails();\r\n          } else {\r\n            promises = this.FamilyRecipeDetails();\r\n          }\r\n        } else {\r\n          promises = this.RecipeDetails();\r\n        }\r\n        let responseContainsRecipe = false;\r\n        if (promises.length == 2) {\r\n          responseContainsRecipe = true;\r\n        }\r\n        let responses = await Promise.all(promises);\r\n        this.detailedInstructions = responses[0].data;\r\n        console.log(\"responseContainsRecipe: \" + responseContainsRecipe);\r\n        if (responseContainsRecipe) {\r\n          this.recipe = this.$root.store.extractRecipe(responses[1]);\r\n        } else {\r\n          this.recipe = this.recipeProp;\r\n        }\r\n      } catch (error) {\r\n        console.log(\"error \", error);\r\n        this.$router.replace(\"/NotFound\");\r\n        return;\r\n      }\r\n    },\r\n    RecipeDetails() {\r\n      let promises = [];\r\n      promises.push(\r\n        this.axios.get(\r\n          `${this.$root.store.baseUrl}/recipes/detailedInstructions/recipeID/${this.recipeId}`\r\n        )\r\n      );\r\n      if (!this.recipeProp) {\r\n        promises.push(\r\n          this.axios.get(\r\n            `${this.$root.store.baseUrl}/recipes/recipeID/${this.recipeId}`\r\n          )\r\n        );\r\n      }\r\n      return promises;\r\n    },\r\n    UserRecipeDetails() {\r\n      let promises = [];\r\n      promises.push(\r\n        this.axios.get(\r\n          `${this.$root.store.baseUrl}/user/myRecipes/detailedInstructions/recipeID/${this.recipeId}`\r\n        )\r\n      );\r\n      if (!this.recipeProp) {\r\n        promises.push(\r\n          this.axios.get(\r\n            `${this.$root.store.baseUrl}/user/myRecipes/recipeID/${this.recipeId}`\r\n          )\r\n        );\r\n      }\r\n      return promises;\r\n    },\r\n    FamilyRecipeDetails() {\r\n      let promises = [];\r\n      promises.push(\r\n        this.axios.get(\r\n          `${this.$root.store.baseUrl}/user/familyRecipes/detailedInstructions/recipeID/${this.recipeId}`\r\n        )\r\n      );\r\n      if (!this.recipeProp) {\r\n        promises.push(\r\n          this.axios.get(\r\n            `${this.$root.store.baseUrl}/user/familyRecipes/recipeID/${this.recipeId}` \r\n          )\r\n        );\r\n      }\r\n      return promises;\r\n    },\r\n    updateProgress(progressInfo) {\r\n      if ($cookies.get(\"session\")) {\r\n        this.$root.store.updateProgress(this.recipeId, progressInfo);\r\n      }\r\n    },\r\n    getProgress() {\r\n      return this.$root.store.getProgress(this.recipeId);\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style>\r\n.imageAndtitle {\r\n  font-family: Dosis, Helvetica, Arial, sans-serif;\r\n  font-size: 2.25rem;\r\n  font-weight: 800;\r\n}\r\n\r\n .text{\r\n    font-family: Dosis, Helvetica, Arial, sans-serif;\r\n    font-size: 1.5rem;\r\n    font-weight: 300;\r\n  }\r\n\r\n  .textBold{\r\n    font-weight: 450;\r\n    font-size: 1.65rem;\r\n  }\r\n\r\n</style>\r\n"]}]}