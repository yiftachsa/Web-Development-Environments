{"remainingRequest":"C:\\scripts\\Courses_Scripts\\Internet_Programing_Environments\\Project\\assignment-3-2-v2-yiftach-merav\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!C:\\scripts\\Courses_Scripts\\Internet_Programing_Environments\\Project\\assignment-3-2-v2-yiftach-merav\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\scripts\\Courses_Scripts\\Internet_Programing_Environments\\Project\\assignment-3-2-v2-yiftach-merav\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\scripts\\Courses_Scripts\\Internet_Programing_Environments\\Project\\assignment-3-2-v2-yiftach-merav\\src\\pages\\AboutPage.vue?vue&type=template&id=0763bbc8&","dependencies":[{"path":"C:\\scripts\\Courses_Scripts\\Internet_Programing_Environments\\Project\\assignment-3-2-v2-yiftach-merav\\src\\pages\\AboutPage.vue","mtime":1595098413791},{"path":"C:\\scripts\\Courses_Scripts\\Internet_Programing_Environments\\Project\\assignment-3-2-v2-yiftach-merav\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\scripts\\Courses_Scripts\\Internet_Programing_Environments\\Project\\assignment-3-2-v2-yiftach-merav\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"C:\\scripts\\Courses_Scripts\\Internet_Programing_Environments\\Project\\assignment-3-2-v2-yiftach-merav\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\scripts\\Courses_Scripts\\Internet_Programing_Environments\\Project\\assignment-3-2-v2-yiftach-merav\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:dmFyIHJlbmRlciA9IGZ1bmN0aW9uKCkgewogIHZhciBfdm0gPSB0aGlzCiAgdmFyIF9oID0gX3ZtLiRjcmVhdGVFbGVtZW50CiAgdmFyIF9jID0gX3ZtLl9zZWxmLl9jIHx8IF9oCiAgcmV0dXJuIF9jKCJkaXYiLCB7IHN0YXRpY0NsYXNzOiAidGV4dFN0eWxlIiB9LCBbCiAgICBfYygiaDEiLCB7IHN0YXRpY0NsYXNzOiAidGl0bGUiIH0sIFtfdm0uX3YoIkFib3V0IHVzIildKSwKICAgIF9jKAogICAgICAiZGl2IiwKICAgICAgeyBzdGF0aWNDbGFzczogInRleHQiIH0sCiAgICAgIFsKICAgICAgICBfYygKICAgICAgICAgICJiLWNvbnRhaW5lciIsCiAgICAgICAgICBbCiAgICAgICAgICAgIF9jKAogICAgICAgICAgICAgICJiLXJvdyIsCiAgICAgICAgICAgICAgeyBhdHRyczogeyAibm8tZ3V0dGVycyI6ICIiIH0gfSwKICAgICAgICAgICAgICBbCiAgICAgICAgICAgICAgICBfYygiYi1jb2wiLCBbCiAgICAgICAgICAgICAgICAgIF9jKCJoMiIsIHsgc3RhdGljQ2xhc3M6ICJzdWJUaXRsZSIgfSwgWwogICAgICAgICAgICAgICAgICAgIF92bS5fdigiV2hvIHdlIGFyZT8iKQogICAgICAgICAgICAgICAgICBdKSwKICAgICAgICAgICAgICAgICAgX2MoImRpdiIsIHsgc3RhdGljQ2xhc3M6ICJub3JtYWwiIH0sIFsKICAgICAgICAgICAgICAgICAgICBfYygic2VjdGlvbiIsIFsKICAgICAgICAgICAgICAgICAgICAgIF9jKCJwIiwgWwogICAgICAgICAgICAgICAgICAgICAgICBfdm0uX3YoCiAgICAgICAgICAgICAgICAgICAgICAgICAgIiBXZSBhcmUgdHdvIFNvZnR3YXJlIGFuZCBJbmZvcm1hdGlvbiBTeXN0ZW1zIEVuZ2luZWVyaW5nIHN0dWRlbnRzLiAiCiAgICAgICAgICAgICAgICAgICAgICAgICkKICAgICAgICAgICAgICAgICAgICAgIF0pLAogICAgICAgICAgICAgICAgICAgICAgX2MoInAiLCBbCiAgICAgICAgICAgICAgICAgICAgICAgIF92bS5fdigKICAgICAgICAgICAgICAgICAgICAgICAgICAiIFdlIGhhdmUgYnVpbHQgdGhpcyBzaXRlIHRvIGxlYXJuLCBleHBsb3JlIGFuZCBleHBhbmQgb3VyIGtub3dsZWRnZSBpbiBGdWxsIFN0YWNrIGRldmVsb3BtZW50IGFzIHBhcnQgb2YgYW4gaW50ZXJuZXQgcHJvZ3JhbWluZyBlbnZpcm9ubWVudHMgY291cnNlLiBJbiB0aGUgcHJvY2VzcyBvZiBidWlsZGluZyB0aGlzIHdlYiBhcHBsaWNhdGlvbiB3ZSB0cmllZCB0byBjaGFsbGVuZ2Ugb3Vyc2VsdmVzIHRvIGluY29ycG9yYXRlIGEgd2lkZSBhcnJheSBvZiBuZXcgYW5kIGV4aXN0aW5nIHRlY2hub2xvZ2llcy4gIgogICAgICAgICAgICAgICAgICAgICAgICApCiAgICAgICAgICAgICAgICAgICAgICBdKSwKICAgICAgICAgICAgICAgICAgICAgIF9jKCJwIiwgWwogICAgICAgICAgICAgICAgICAgICAgICBfdm0uX3YoCiAgICAgICAgICAgICAgICAgICAgICAgICAgIiBBcyBwYXJ0IG9mIHRoZSBkZXZlbG9wbWVudCBwcm9jZXNzIHdlIGRlc2lnbmVkIGEgY29tcHJlaGVuc2l2ZSAiCiAgICAgICAgICAgICAgICAgICAgICAgICksCiAgICAgICAgICAgICAgICAgICAgICAgIF9jKAogICAgICAgICAgICAgICAgICAgICAgICAgICJhIiwKICAgICAgICAgICAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICBhdHRyczogewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICBocmVmOgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICJodHRwczovL2FwcC5zd2FnZ2VyaHViLmNvbS9hcGlzL3NobWVyYTYvQXNzaWdubWVudDMuMS8xLjAuNSIKICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICAgICAgICAgIFtfdm0uX3YoIiBSRVNUZnVsbCBBUEkiKV0KICAgICAgICAgICAgICAgICAgICAgICAgKSwKICAgICAgICAgICAgICAgICAgICAgICAgX3ZtLl92KAogICAgICAgICAgICAgICAgICAgICAgICAgICIgZm9yIHRoZSBiYWNrZW5kIG9mIHRoZSB3ZWIgYXBwbGljYXRpb24uIFdlIGRlc2lnbmVkIGFuZCBwcm9ncmFtbWVkIGEgYmFja2VuZCBzZXJ2ZXIgdGhhdCB3b3VsZCBpbXBsZW1lbnQgdGhlIEFQSSB1c2luZyBOT0RFIEpTLiBJbiBhZGRpdGlvbiwgd2Ugc2V0dXAgYW5kIHVzZWQgYW4gQXp1cmUgY2xvdWQgREIgd2hpY2ggd2UgdXNlIGZvciBhbGwgdGhlIGJhY2tlbmQgc3RvcmFnZSBuZWVkcy4gIgogICAgICAgICAgICAgICAgICAgICAgICApCiAgICAgICAgICAgICAgICAgICAgICBdKSwKICAgICAgICAgICAgICAgICAgICAgIF9jKCJwIiwgWwogICAgICAgICAgICAgICAgICAgICAgICBfdm0uX3YoCiAgICAgICAgICAgICAgICAgICAgICAgICAgIiBUaGUgZnJvbnRlbmQgb2YgdGhlIHdlYiBhcHBsaWNhdGlvbiBpcyBkZXNpZ25lZCBhcyBhIFNpbmdsZSBQYWdlIEFwcGxpY2F0aW9uIHdoaWNoIHdlIGJ1aWx0IHVzaW5nIFZ1ZSBKUyBmcmFtZXdvcmsuIFRoZSBmcm9udGVuZCB3YXMgZGVzaWduZWQgdG8gYmUgZmFzdCwgc2ltcGxlLCBjb21mb3J0YWJsZSwgYW5kIGludGVyYWN0aXZlLiAiCiAgICAgICAgICAgICAgICAgICAgICAgICkKICAgICAgICAgICAgICAgICAgICAgIF0pCiAgICAgICAgICAgICAgICAgICAgXSksCiAgICAgICAgICAgICAgICAgICAgX2MoInNlY3Rpb24iLCBbCiAgICAgICAgICAgICAgICAgICAgICBfYygic3Ryb25nIiwgW192bS5fdigiT3RoZXIgcHJvamVjdHMiKV0pLAogICAgICAgICAgICAgICAgICAgICAgX2MoInAiLCBbCiAgICAgICAgICAgICAgICAgICAgICAgIF92bS5fdigKICAgICAgICAgICAgICAgICAgICAgICAgICAiIFRoaXMgcHJvamVjdCBpcyBvbmUgb2Ygc2V2ZXJhbCBwcm9qZWN0cyB3ZSBoYWQgY29sbGFib3JhdGVkIG9uIGluIHRoaXMgY291cnNlLiAiCiAgICAgICAgICAgICAgICAgICAgICAgICkKICAgICAgICAgICAgICAgICAgICAgIF0pLAogICAgICAgICAgICAgICAgICAgICAgX2MoInVsIiwgWwogICAgICAgICAgICAgICAgICAgICAgICBfYygibGkiLCBbCiAgICAgICAgICAgICAgICAgICAgICAgICAgX2MoInAiLCBbCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBfdm0uX3YoCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICIgbW9zdCBub3RhYmx5IHdlIGRldmVsb3BlZCBhIFBhY21hbiBvbmxpbmUgZ2FtZS4gVGhlIGdhbWUgd2FzIGRlc2lnbmVkIGFuZCB3cml0dGVuIGluIEphdmFTY3JpcHQgdXNpbmcgalF1ZXJ5IGZyYW1ld29yay4gIgogICAgICAgICAgICAgICAgICAgICAgICAgICAgKSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgIF9jKAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAiYSIsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBhdHRyczogewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaHJlZjoKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgImh0dHBzOi8vc2lzZS13ZWItZGV2ZWxvcG1lbnQtZW52aXJvbm1lbnRzLmdpdGh1Yi5pby9hc3NpZ25tZW50Mi1tZXJhdi15aWZ0YWNoIgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgW192bS5fdigiQ2hlY2sgaXQgb3V0ISIpXQogICAgICAgICAgICAgICAgICAgICAgICAgICAgKQogICAgICAgICAgICAgICAgICAgICAgICAgIF0pCiAgICAgICAgICAgICAgICAgICAgICAgIF0pLAogICAgICAgICAgICAgICAgICAgICAgICBfYygibGkiLCBbCiAgICAgICAgICAgICAgICAgICAgICAgICAgX3ZtLl92KCIgTWVyYXYncyBmaXJzdCBhc3NpZ25tZW50ICIpLAogICAgICAgICAgICAgICAgICAgICAgICAgIF9jKAogICAgICAgICAgICAgICAgICAgICAgICAgICAgImEiLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICBhdHRyczogewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGhyZWY6CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAiaHR0cHM6Ly9zaXNlLXdlYi1kZXZlbG9wbWVudC1lbnZpcm9ubWVudHMuZ2l0aHViLmlvLzIwNTc5NTUzNy8iCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBbX3ZtLl92KCJUYWtlIG1lIHRoZXJlISIpXQogICAgICAgICAgICAgICAgICAgICAgICAgICkKICAgICAgICAgICAgICAgICAgICAgICAgXSksCiAgICAgICAgICAgICAgICAgICAgICAgIF9jKCJsaSIsIFsKICAgICAgICAgICAgICAgICAgICAgICAgICBfdm0uX3YoIiBZaWZ0YWNoJ3MgZmlyc3QgYXNzaWdubWVudCAiKSwKICAgICAgICAgICAgICAgICAgICAgICAgICBfYygKICAgICAgICAgICAgICAgICAgICAgICAgICAgICJhIiwKICAgICAgICAgICAgICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYXR0cnM6IHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBocmVmOgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgImh0dHBzOi8vc2lzZS13ZWItZGV2ZWxvcG1lbnQtZW52aXJvbm1lbnRzLmdpdGh1Yi5pby8zMTIxNDEzNjkvIgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICAgICAgICAgICAgW192bS5fdigiR2l2ZSBpdCBhIGdsYW5jZSEiKV0KICAgICAgICAgICAgICAgICAgICAgICAgICApCiAgICAgICAgICAgICAgICAgICAgICAgIF0pCiAgICAgICAgICAgICAgICAgICAgICBdKQogICAgICAgICAgICAgICAgICAgIF0pCiAgICAgICAgICAgICAgICAgIF0pCiAgICAgICAgICAgICAgICBdKSwKICAgICAgICAgICAgICAgIF9jKCJiLWNvbCIsIFsKICAgICAgICAgICAgICAgICAgX2MoImRpdiIsIFsKICAgICAgICAgICAgICAgICAgICBfYygiaW1nIiwgewogICAgICAgICAgICAgICAgICAgICAgc3RhdGljQ2xhc3M6ICJpbWdBYm91dCIsCiAgICAgICAgICAgICAgICAgICAgICBhdHRyczogewogICAgICAgICAgICAgICAgICAgICAgICBzcmM6IHJlcXVpcmUoIkAvYXNzZXRzL2RldmVsb3BlcnMuanBlZyIpLAogICAgICAgICAgICAgICAgICAgICAgICBhbHQ6ICJkZXZlbG9wZXJzIgogICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgIH0pCiAgICAgICAgICAgICAgICAgIF0pCiAgICAgICAgICAgICAgICBdKQogICAgICAgICAgICAgIF0sCiAgICAgICAgICAgICAgMQogICAgICAgICAgICApCiAgICAgICAgICBdLAogICAgICAgICAgMQogICAgICAgICkKICAgICAgXSwKICAgICAgMQogICAgKQogIF0pCn0KdmFyIHN0YXRpY1JlbmRlckZucyA9IFtdCnJlbmRlci5fd2l0aFN0cmlwcGVkID0gdHJ1ZQoKZXhwb3J0IHsgcmVuZGVyLCBzdGF0aWNSZW5kZXJGbnMgfQ=="}]}