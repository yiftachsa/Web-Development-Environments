{"remainingRequest":"C:\\scripts\\Courses_Scripts\\Internet_Programing_Environments\\Project\\assignment-3-2-v2-yiftach-merav\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\scripts\\Courses_Scripts\\Internet_Programing_Environments\\Project\\assignment-3-2-v2-yiftach-merav\\src\\components\\RecipePrep.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"C:\\scripts\\Courses_Scripts\\Internet_Programing_Environments\\Project\\assignment-3-2-v2-yiftach-merav\\src\\components\\RecipePrep.vue","mtime":1594550723581},{"path":"C:\\scripts\\Courses_Scripts\\Internet_Programing_Environments\\Project\\assignment-3-2-v2-yiftach-merav\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\scripts\\Courses_Scripts\\Internet_Programing_Environments\\Project\\assignment-3-2-v2-yiftach-merav\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"C:\\scripts\\Courses_Scripts\\Internet_Programing_Environments\\Project\\assignment-3-2-v2-yiftach-merav\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"C:\\scripts\\Courses_Scripts\\Internet_Programing_Environments\\Project\\assignment-3-2-v2-yiftach-merav\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\scripts\\Courses_Scripts\\Internet_Programing_Environments\\Project\\assignment-3-2-v2-yiftach-merav\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKLmJvbGR7CiAgZm9udC13ZWlnaHQ6IDYwMDsKICBmb250LXNpemU6IDEuNXJlbTsKfQo="},{"version":3,"sources":["RecipePrep.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8HA;AACA;AACA;AACA","file":"RecipePrep.vue","sourceRoot":"src/components","sourcesContent":["<template>\r\n  <div>\r\n    <b-container>\r\n      <div class=\"textBold\">\r\n      number Of Steps {{ numberOfSteps }} progress {{ progress }} finished {{finished}}\r\n      </div>\r\n      <b-progress :max=\"numberOfSteps\" animated>\r\n        <b-progress-bar\r\n          :value=\"progress\"\r\n          :label=\"`${progress} steps of ${numberOfSteps} completed`\"\r\n          v-if=\"!finished\"\r\n        ></b-progress-bar>\r\n        <b-progress-bar\r\n          :value=\"progress\"\r\n          label=\"Enjoy your meal\"\r\n          v-else\r\n        ></b-progress-bar>\r\n      </b-progress>\r\n      <h5>check every step you complete to track your progress</h5>\r\n      <div v-for=\"detailedIns in detailedInstructions\" :key=\"detailedIns.id\">\r\n        <b-card v-for=\"step in detailedIns.steps\" :key=\"step.id\">\r\n          <input\r\n            type=\"checkbox\"\r\n            :id=\"'checkBox' + step.number\"\r\n            @click=\"checked(step)\"\r\n          />\r\n\r\n          {{ step.number }})\r\n\r\n          {{ step.step }}\r\n          <div v-if=\"step.step_equipment.length > 0\">\r\n            <strong class =\"bold\">Equipment:</strong>\r\n            <ul>\r\n              <li v-for=\"equipment in step.step_equipment\" :key=\"equipment.id\">\r\n                {{ equipment }}\r\n              </li>\r\n            </ul>\r\n          </div>\r\n          <div v-if=\"step.step_ingredients.length > 0\">\r\n             <strong class =\"bold\">Ingredients:</strong>\r\n            <ul>\r\n              <li\r\n                v-for=\"ingredient in step.step_ingredients\"\r\n                :key=\"ingredient.id\"\r\n              >\r\n                {{ ingredient }}\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        </b-card>\r\n      </div>\r\n    </b-container>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  props: {\r\n    detailedInstructions: {\r\n      type: Array,\r\n      requierd: true,\r\n    },\r\n    previousProgress: {\r\n      type: Object,\r\n      requierd: false,\r\n    },\r\n  },\r\n  data() {\r\n    return {\r\n      progress: 0,\r\n    };\r\n  },\r\n  computed: {\r\n    numberOfSteps() {\r\n      let count = 0;\r\n      for (let i = 0; i < this.detailedInstructions.length; i++) {\r\n        for (let j = 0; j < this.detailedInstructions[i].steps.length; j++) {\r\n          count++;\r\n        }\r\n      }\r\n      return count;\r\n    },\r\n    finished() {\r\n      if (this.progress < this.numberOfSteps) {\r\n        return false;\r\n      } else {\r\n        return true;\r\n      }\r\n    },\r\n  },\r\n  mounted() {\r\n    this.initProgress();\r\n  },\r\n  methods: {\r\n    initProgress() {\r\n      let currentProgress = 0;\r\n      if (this.previousProgress) {\r\n        for (const [key, value] of Object.entries(this.previousProgress)) {\r\n          let checkBox = document.getElementById(`checkBox${key}`); //key is stepNumber\r\n          checkBox.checked = value; //value is isChecked\r\n          if (value) {\r\n            currentProgress++;\r\n          }\r\n        }\r\n      }\r\n      this.progress = currentProgress;\r\n    },\r\n    checked(checkBoxStep) {\r\n      let checkBox = document.getElementById(`checkBox${checkBoxStep.number}`);\r\n      if (checkBox.checked == true) {\r\n        this.progress++;\r\n      } else {\r\n        this.progress--;\r\n      }\r\n      let progressInfo = {\r\n        stepNumber: checkBoxStep.number,\r\n        isChecked: checkBox.checked,\r\n      };\r\n      this.$emit(\"progress-changed\", progressInfo);\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style>\r\n \r\n  .bold{\r\n    font-weight: 600;\r\n    font-size: 1.5rem;\r\n  }\r\n</style>\r\n"]}]}