{"remainingRequest":"C:\\scripts\\Courses_Scripts\\Internet_Programing_Environments\\Project\\assignment-3-2-v2-yiftach-merav\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\scripts\\Courses_Scripts\\Internet_Programing_Environments\\Project\\assignment-3-2-v2-yiftach-merav\\src\\components\\Ingredients.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"C:\\scripts\\Courses_Scripts\\Internet_Programing_Environments\\Project\\assignment-3-2-v2-yiftach-merav\\src\\components\\Ingredients.vue","mtime":1595228913579},{"path":"C:\\scripts\\Courses_Scripts\\Internet_Programing_Environments\\Project\\assignment-3-2-v2-yiftach-merav\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\scripts\\Courses_Scripts\\Internet_Programing_Environments\\Project\\assignment-3-2-v2-yiftach-merav\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"C:\\scripts\\Courses_Scripts\\Internet_Programing_Environments\\Project\\assignment-3-2-v2-yiftach-merav\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"C:\\scripts\\Courses_Scripts\\Internet_Programing_Environments\\Project\\assignment-3-2-v2-yiftach-merav\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\scripts\\Courses_Scripts\\Internet_Programing_Environments\\Project\\assignment-3-2-v2-yiftach-merav\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoNCi5jZW50ZXItd2lkdGggew0KICBtYXJnaW4tbGVmdDogMHB0eDsNCiAgbWFyZ2luLXJpZ2h0OiBhdXRvOw0KICB3aWR0aDogNTAlOw0KfQ0K"},{"version":3,"sources":["Ingredients.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6FA;AACA;AACA;AACA;AACA","file":"Ingredients.vue","sourceRoot":"src/components","sourcesContent":["<template>\r\n  <div>\r\n    <b>Ingredients:</b>\r\n    <div v-if=\"!scale\">\r\n      <ul>\r\n        <li v-for=\"(r, index) in this.ingredients\" :key=\"index + '_' + r.id\">\r\n          {{ ingredientDisplay(r) }}\r\n        </li>\r\n      </ul>\r\n    </div>\r\n    <div v-else>\r\n      <b-input-group prepend=\"Portions\" class=\"center-width\">\r\n        <b-form-input\r\n          type=\"number\"\r\n          min=\"0.1\"\r\n          :value=\"placeholder\"\r\n          :placeholder=\"placeholder\"\r\n          @input=\"scaleChanged\"\r\n        >\r\n        </b-form-input>\r\n        <b-input-group-append>\r\n          <b-button variant=\"info\" @click=\"reset\">Reset</b-button>\r\n          <b-button variant=\"info\" @click=\"double\">Double</b-button>\r\n        </b-input-group-append>\r\n      </b-input-group>\r\n      <ul>\r\n        <li v-for=\"(r, index) in this.ingredients\" :key=\"index + '_' + r.id\">\r\n          {{ ingredientDisplay(r) }}\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  </div>\r\n</template>\r\n<script>\r\nexport default {\r\n  props: {\r\n    ingredients: {\r\n      type: Array,\r\n      required: true,\r\n    },\r\n    scale: {\r\n      type: Boolean,\r\n      default: false,\r\n    },\r\n    yeild: {\r\n      type: Number,\r\n      required: false,\r\n    },\r\n  },\r\n  mounted() {\r\n    this.portions = this.yeild;\r\n  },\r\n  data() {\r\n    return {\r\n      portions: 0,\r\n    };\r\n  },\r\n  computed: {\r\n    placeholder: function() {\r\n      return \"\" + this.portions;\r\n    },\r\n    multiply: function() {\r\n      return this.portions / this.yeild;\r\n    },\r\n  },\r\n  methods: {\r\n    scaleChanged(value) {\r\n      this.portions = parseInt(value);\r\n    },\r\n    ingredientDisplay(ingredient) {\r\n      let amount;\r\n      if (this.scale) {\r\n        amount = ingredient.amount * this.multiply;\r\n      } else {\r\n        amount = ingredient.amount;\r\n      }\r\n      return `${amount} ${ingredient.unit} ${ingredient.name}`;\r\n    },\r\n    double() {\r\n      this.portions = this.portions * 2;\r\n    },\r\n    reset() {\r\n      if (this.scale) {\r\n        this.portions = this.yeild;\r\n      } else {\r\n        this.portions = 1;\r\n      }\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style>\r\n.center-width {\r\n  margin-left: 0ptx;\r\n  margin-right: auto;\r\n  width: 50%;\r\n}\r\n</style>\r\n"]}]}