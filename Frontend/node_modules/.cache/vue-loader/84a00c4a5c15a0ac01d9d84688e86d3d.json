{"remainingRequest":"C:\\scripts\\Courses_Scripts\\Internet_Programing_Environments\\Project\\assignment-3-2-v2-yiftach-merav\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\scripts\\Courses_Scripts\\Internet_Programing_Environments\\Project\\assignment-3-2-v2-yiftach-merav\\src\\components\\DetailsInstructions.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"C:\\scripts\\Courses_Scripts\\Internet_Programing_Environments\\Project\\assignment-3-2-v2-yiftach-merav\\src\\components\\DetailsInstructions.vue","mtime":1594911965648},{"path":"C:\\scripts\\Courses_Scripts\\Internet_Programing_Environments\\Project\\assignment-3-2-v2-yiftach-merav\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\scripts\\Courses_Scripts\\Internet_Programing_Environments\\Project\\assignment-3-2-v2-yiftach-merav\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"C:\\scripts\\Courses_Scripts\\Internet_Programing_Environments\\Project\\assignment-3-2-v2-yiftach-merav\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"C:\\scripts\\Courses_Scripts\\Internet_Programing_Environments\\Project\\assignment-3-2-v2-yiftach-merav\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\scripts\\Courses_Scripts\\Internet_Programing_Environments\\Project\\assignment-3-2-v2-yiftach-merav\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCi50ZXh0ewogICBmb250LWZhbWlseTogRG9zaXMsIEhlbHZldGljYSwgQXJpYWwsIHNhbnMtc2VyaWY7CiAgIGZvbnQtc2l6ZTogMS41cmVtOwogICBmb250LXdlaWdodDogMzAwOwogfQoKIC50ZXh0Qm9sZHsKICAgZm9udC13ZWlnaHQ6IDQ1MDsKICAgZm9udC1zaXplOiAxLjY1cmVtOwogfQoK"},{"version":3,"sources":["DetailsInstructions.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAuJA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA","file":"DetailsInstructions.vue","sourceRoot":"src/components","sourcesContent":["<template>\r\n<div/>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  components: {\r\n  },\r\n  props: {\r\n    recipeId: {\r\n      required: true,\r\n    },\r\n    recipeType: {\r\n      type: String,\r\n      required: true,\r\n    },\r\n  },\r\n  data() {\r\n    return {\r\n      detailedInstructions: null,\r\n      recipe: null,\r\n    };\r\n  },\r\n  mounted() {\r\n    this.getRecipeDetails();\r\n  },\r\n  computed: {\r\n    numberOfSteps() {\r\n      let count = 0;\r\n      for (let i = 0; i < this.detailedInstructions.length; i++) {\r\n        for (let j = 0; j < this.detailedInstructions[i].steps.length; j++) {\r\n          count++;\r\n        }\r\n      }\r\n      if ($cookies.get(\"session\")) {\r\n        console.log(\"Happy\")\r\n        this.$root.store.updateNumberOfInstructions(this.recipeId, count);\r\n        if(!this.$root.store.isAlreadyProgress(this.recipeId))\r\n        {\r\n          console.log(\"super Happy\")\r\n          this.$root.store.updateIntegerProgress(this.recipeId, 0);\r\n        }\r\n      }\r\n      return count;\r\n\r\n    },\r\n  },\r\n  methods: {\r\n    recipePropFunc() {\r\n      //check in store if the preview exists\r\n      if (this.$root.store.getPreLoadedRecipe(this.recipeId)) {\r\n        this.recipeProp= this.$root.store.getPreLoadedRecipe(this.recipeId);\r\n      }\r\n      this.recipeProp=undefined;\r\n    },\r\n    async getRecipeDetails() {\r\n      try {\r\n        this.recipePropFunc;\r\n        let promises = [];\r\n        if ((this.recipeType == \"personal\") | (this.recipeType == \"family\")) {\r\n          if (!$cookies.get(\"session\")) {\r\n            this.$router.push(\"/\").catch(() => {\r\n              this.$forceUpdate();\r\n            });\r\n            return;\r\n          }\r\n          //checking the type of recipe\r\n          if (this.recipeType == \"personal\") {\r\n            promises = this.UserRecipeDetails();\r\n          } else {\r\n            promises = this.FamilyRecipeDetails();\r\n          }\r\n        } else {\r\n          promises = this.RecipeDetails();\r\n        }\r\n        let responseContainsRecipe = false;\r\n        if (promises.length == 2) {\r\n          responseContainsRecipe = true;\r\n        }\r\n        let responses = await Promise.all(promises);\r\n        this.detailedInstructions = responses[0].data;\r\n        console.log(\"responseContainsRecipe: \" + responseContainsRecipe);\r\n        if (responseContainsRecipe) {\r\n          this.recipe = this.$root.store.extractRecipe(responses[1]);\r\n        } else {\r\n          this.recipe = this.recipeProp;\r\n        }\r\n        this.numberOfSteps;\r\n      } catch (error) {\r\n        console.log(\"error \", error);\r\n        this.$router.replace(\"/NotFound\");\r\n        return;\r\n      }\r\n    },\r\n    RecipeDetails() {\r\n      let promises = [];\r\n      promises.push(\r\n        this.axios.get(\r\n          `${this.$root.store.baseUrl}/recipes/detailedInstructions/recipeID/${this.recipeId}`\r\n        )\r\n      );\r\n      if (!this.recipeProp) {\r\n        promises.push(\r\n          this.axios.get(\r\n            `${this.$root.store.baseUrl}/recipes/recipeID/${this.recipeId}`\r\n          )\r\n        );\r\n      }\r\n      return promises;\r\n    },\r\n    UserRecipeDetails() {\r\n      let promises = [];\r\n      promises.push(\r\n        this.axios.get(\r\n          `${this.$root.store.baseUrl}/user/myRecipes/detailedInstructions/recipeID/${this.recipeId}`\r\n        )\r\n      );\r\n      if (!this.recipeProp) {\r\n        promises.push(\r\n          this.axios.get(\r\n            `${this.$root.store.baseUrl}/user/myRecipes/recipeID/${this.recipeId}`\r\n          )\r\n        );\r\n      }\r\n      return promises;\r\n    },\r\n    FamilyRecipeDetails() {\r\n      let promises = [];\r\n      promises.push(\r\n        this.axios.get(\r\n          `${this.$root.store.baseUrl}/user/familyRecipes/detailedInstructions/recipeID/${this.recipeId}`\r\n        )\r\n      );\r\n      if (!this.recipeProp) {\r\n        promises.push(\r\n          this.axios.get(\r\n            `${this.$root.store.baseUrl}/user/familyRecipes/recipeID/${this.recipeId}` \r\n          )\r\n        );\r\n      }\r\n      return promises;\r\n    },\r\n  }\r\n    // getProgress() {\r\n    //   return this.$root.store.getProgress(this.recipeId);\r\n    // },\r\n};\r\n</script>\r\n\r\n<style>\r\n\r\n .text{\r\n    font-family: Dosis, Helvetica, Arial, sans-serif;\r\n    font-size: 1.5rem;\r\n    font-weight: 300;\r\n  }\r\n\r\n  .textBold{\r\n    font-weight: 450;\r\n    font-size: 1.65rem;\r\n  }\r\n\r\n</style>\r\n"]}]}